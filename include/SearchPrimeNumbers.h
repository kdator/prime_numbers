/**
 * \file SearchPrimeNumbers.h
 * \author kolpakov dmitrii
 * \date 2020-10-25
 */
#ifndef SEARCH_PRIME_NUMBERS_H_
#define SEARCH_PRIME_NUMBERS_H_

/**
 * \brief Функция реализует алгоритм "Решето Эратосфена". 
 * 
 * Функция принимает в качестве параметров границы диапазона, указатель на указатель для записи
 * простых чисел в массив и указатель на целочисленную переменную для записи в неё найденное 
 * количество простых чисел. Поиск происходит при помощи битового сжатия, так что на выход даётся
 * массив, где каждый бит является флагом того, что является число простым или нет.
 *
 * Функция проверяет каждое число в диапазоне на простоту:
 *   
 * 1) Если число простое, то алгоритм вычеркивает все числа, кратные данному 
 *    числу, и переходит к следующему числу.
 *
 * 2) Если следующее число не является простым, то алгоритм пропускает его,
 *    пока оно не достигнет простого числа, и начинает повторять Шаг 1.
 * 
 * Память под массив простых чисел выделяется самой функцией. Для освобождения
 * использоовать free().
 *
 * \param[in] lower_limit нижняя граница поиска.
 * \param[in] upper_limit верхняя граница поиска.
 * \param[out] answer_array_ptr по этому указателю будет записан массив с простыми числами.
 * \param[out] quantity количество простых чисел.
 */
void SearchPrimeNumbers_sieveOfEratosthenes(int lower_limit, int upper_limit,
                                            int** answer_array_ptr, int* quantity);

/**
 * \brief Найти простые числа перебором делителей. 
 * 
 * Память под массив простых чисел выделяется самой функцией. Для освобождения
 * использоовать free().
 * 
 * \param[in] lower_limit нижняя граница поиска.
 * \param[in] upper_limit верхняя граница поиска.
 * \param[out] answer_array_ptr по этому указателю будет записан массив с простыми числами.
 * \param[out] quantity количество простых чисел. 
 */
void SearchPrimeNumbers_dividersEnumeration(int lower_limit, int upper_limit,
                                            int** answer_array_pointer, int* quantity);

#endif /* SEARCH_PRIME_NUMBERS_H_ */